// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Place {
  id          Int   @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String   // Short summary for "About" section
  history     String?  // Longer background/history
  bestTime    String?  // e.g. "October - March"
  location    String?  // City/District/Province
  latitude    Float?
  longitude   Float?
  highlights  String[] // ["Adventure Sports", "Lakeside Walks", "Temples"]
  tips        String?  // Travel tips
  howToReach  String?  // Transport guide
  images      String[]

  // Relations
  activities      Activity[]
  accommodations  Accommodation[]
  cafes           Cafe[]
  itineraries     Itinerary[]
  religiousSites  ReligiousSite[]
  blogs           Blog[]
}


model Activity {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String
  images      String[]
  latitude    Float?
  longitude   Float?
  difficulty  String?
  duration    String?
  highlights  String[]
  bookingInfo String?
  placeId     Int?
  place       Place?   @relation(fields: [placeId], references: [id])
}

model Accommodation {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String
  images      String[]
  price       Float?
  latitude    Float?
  longitude   Float?
  amenities   String[]
  roomTypes   String[]
  rating      Float?
  placeId     Int?
  place       Place?   @relation(fields: [placeId], references: [id])
}

model ReligiousSite {
  id             String   @id @default(cuid())
  name           String
  slug           String   @unique
  description    String   // Overall description of the site
  location       String   // District / city / province
  history        String?  // Background and historical info
  significance   String?  // Spiritual or cultural importance
  openingHours   String?  // e.g., "5:00 AM â€“ 8:00 PM"
  entryFee       Json?    // { internal: "Rs 50", external: "Rs 500", notes: "Children free" }
  dressCode      String?  // e.g., "Modest clothing, no shoes inside"
  photography    String?  // e.g., "Photography allowed only outside main sanctum"
  bestTimeToVisit String? // e.g., "During Dashain or early morning"
  nearbyAttractions String? // Text or list of nearby places
  facilities     Json?    // e.g., { parking: true, restroom: true, guide: true, shops: true }
  festivals      Json?    // [{ name, month, description, images[] }]
  rituals        String[] // Daily rituals, ceremonies, special events
  images         String[]  // Images of the temple/site
  contactInfo    Json?     // { phone, email, website }
  accessibility  Json?     // { wheelchair: true, stairsOnly: false, audioGuide: true }
  safetyGuidelines String[] // Do's and Don'ts for visitors
  reviews        Json?     // Optional future field: [{ user, rating, comment }]

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  place   Place?   @relation(fields: [placeId], references: [id])
  placeId Int?
}


model Cafe {
  id           Int      @id @default(autoincrement())
  name         String
  slug         String   @unique
  description  String
  images       String[]
  latitude     Float?
  longitude    Float?
  openingTime  String?
  closingTime  String?
  specialties  String[]
  ambiance     String[]
  placeId      Int?
  place        Place?   @relation(fields: [placeId], references: [id])
}

model Itinerary {
  id          Int        @id @default(autoincrement())
  name        String
  title       String
  slug        String     @unique
  description String
  images      String[]
  duration    Int?
  highlights  String[]
  days        Json
  placeId     Int?
  place       Place?     @relation(fields: [placeId], references: [id])
}


model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  subtitle  String
  slug      String   @unique
  images    String[]
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  placeId   Int?
  place     Place?    @relation(fields: [placeId], references: [id])
}


