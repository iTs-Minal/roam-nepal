// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Place {
  id          Int   @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String   // Short summary for "About" section
  history     String?  // Longer background/history
  bestTime    String?  // e.g. "October - March"
  location    String?  // City/District/Province
  latitude    Float?
  longitude   Float?
  highlights  String[] // ["Adventure Sports", "Lakeside Walks", "Temples"]
  tips        String?  // Travel tips
  howToReach  String?  // Transport guide
  images      String[]

  // Relations
  activities      Activity[]
  accommodations  Accommodation[]
  cafes           Cafe[]
  itineraries     Itinerary[]
  religiousSites  ReligiousSite[]
  blogs           Blog[]
}


model Activity {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String
  images      String[]
  latitude    Float?
  longitude   Float?
  difficulty  String?
  duration    String?
  highlights  String[]
  bookingInfo String?
  placeId     Int?
  place       Place?   @relation(fields: [placeId], references: [id])
}

model Accommodation {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String
  images      String[]
  price       Float?
  latitude    Float?
  longitude   Float?
  amenities   String[]
  roomTypes   String[]
  rating      Float?
  placeId     Int?
  place       Place?   @relation(fields: [placeId], references: [id])
}

model ReligiousSite {
  id               String   @id @default(cuid())
  name             String
  slug             String   @unique
  description      String
  location         String
    latitude     Float?
  longitude    Float?
  history          String?
  significance     String?
  openingHours     String?
  entryFee         Json?    // { internal, external, notes }
  dressCode        String?
  photography      String?
  bestTimeToVisit  String?
  nearbyAttractions Json?   // [{ name, description, distance, images[] }]
  facilities       Json?    // { parking, restrooms, guide, shops, ... }
  festivals        Json?    // [{ name, month, description, images[] }]
  rituals          Json?    // [{ name, description, time, images[] }]
  images           String[]
  contactInfo      Json?    // { phone, email, website, address }
  accessibility    Json?    // { wheelchair, stairsOnly, audioGuide, ramps }
  safetyGuidelines Json?    // [{ rule, description }]
  reviews          Json?    // [{ user, rating, comment, date }]
  rating           Float?   // Average rating

  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  place   Place?   @relation(fields: [placeId], references: [id])
  placeId Int?
}



model Cafe {
  id           Int      @id @default(autoincrement())
  name         String
  slug         String   @unique
  description  String
  images       String[]
  latitude     Float?
  longitude    Float?
  openingTime  String?
  closingTime  String?
  specialties  String[]
  ambiance     String[]
  menu         Json?    // store menu items with name, price, image, category
  facilities   Json?    // array of facilities
  contactInfo  Json?    // phone, email, website, social
  nearbyAttractions Json? // array with name, distance, image
  placeId      Int?
  place        Place?   @relation(fields: [placeId], references: [id])
  reviews      Json? // user-submitted reviews
  rating       Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model Itinerary {
  id          Int        @id @default(autoincrement())
  name        String
  title       String
  slug        String     @unique
  description String
  images      String[]
  duration    Int?
  highlights  String[]
  days        Json
  placeId     Int?
  place       Place?     @relation(fields: [placeId], references: [id])
}


model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  subtitle  String
  slug      String   @unique
  images    String[]
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  placeId   Int?
  place     Place?    @relation(fields: [placeId], references: [id])
}


